name: Source Code Security Scan
on:
  pull_request:
    branches: [ main, test-pr]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        # Fetch all history for base branch detection
        fetch-depth: 0

    # Download the SSD Scanner CLI tool
    - name: Download SSD Scanner CLI
      run: |
        curl -L -o ssd-scanner-cli https://github.com/OpsMx/ssd-scanner-cli-public/releases/download/v2025.07.24/ssd-scanner-cli-amd64
        chmod +x ssd-scanner-cli

    # Run SSD Scanner with enhanced diff scan support
    - name: Run SSD Scanner
      id: ssd-scan
      run: |
        # Determine if this is a pull request and set appropriate flags
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then

          echo "Running regular scan for push to ${{ github.ref_name }}"
          
          ./ssd-scanner-cli --scanners=trivy \
             --trivy-scanners=codelicensescan \
             --repository-url="${{ github.server_url }}/${{ github.repository }}" \
             --source-code-path=. \
             --build-id="${{ github.run_id }}" \
             --branch="${{ github.head_ref }}" \
             --upload-url="${{ secrets.SSD_UPLOAD_URL }}" \
             --ssd-token="${{ secrets.TEAM_TOKEN }}" \
             --debug 

             sleep 180

          ./ssd-scanner-cli --scanners=trivy \
             --trivy-scanners=codelicensescan \
             --repository-url="${{ github.server_url }}/${{ github.repository }}" \
             --source-code-path=. \
             --build-id="${{ github.run_id }}" \
             --branch="${{ github.base_ref }}" \
             --upload-url="${{ secrets.SSD_UPLOAD_URL }}" \
             --ssd-token="${{ secrets.TEAM_TOKEN }}" \
             --debug 

            sleep 180

          echo "Running diff-scan for Pull Request #${{ github.event.number }}"
          ./ssd-scanner-cli --scanners=trivy \
            --trivy-scanners=codelicensescan \
            --repository-url="${{ github.server_url }}/${{ github.repository }}" \
            --source-code-path=. \
            --build-id="${{ github.run_id }}" \
            --branch="${{ github.head_ref }}" \
            --upload-url="${{ secrets.SSD_UPLOAD_URL }}" \
            --ssd-token="${{ secrets.TEAM_TOKEN }}" \
            --pr-id="${{ github.event.number }}" \
            --git-auth-type=token \
            --git-auth-key="${{ secrets.GH_TOKEN }}" \
            --interrupt-condition="critical" \
            --diff-scan="true" \
            --interrupt-for-old-issues=false \
            --keep-results=true \
            --debug

        else
          echo "Running regular scan for push to ${{ github.ref_name }}"
          ./ssd-scanner-cli --scanners=trivy \
            --trivy-scanners=codelicensescan \
            --repository-url="${{ github.server_url }}/${{ github.repository }}" \
            --source-code-path=. \
            --build-id="${{ github.run_id }}" \
            --branch="${{ github.ref_name }}" \
            --upload-url="${{ secrets.SSD_UPLOAD_URL }}" \
            --ssd-token="${{ secrets.TEAM_TOKEN }}" \
            --keep-results=true \
            --debug
        fi

    # Upload diff scan summary file (PR only)
    - name: Upload Diff Scan Summary
      uses: actions/upload-artifact@v4
      if: github.event_name == 'pull_request' && always()
      with:
        name: diff-scan-summary-pr-${{ github.event.number }}
        path: ~/.local/bin/ssd-scan-results/diff-scan-findings.json
        retention-days: 90
        if-no-files-found: warn

    # Comment on PR with scan results summary
    - name: Comment PR with Security Scan Results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const { createPRComment } = require('./.github/scripts/pr-comment-script.js');
          
          const secrets = {
            GITHUB_SERVER_URL: '${{ github.server_url }}',
            GITHUB_RUN_ID: '${{ github.run_id }}',
            SSD_UPLOAD_URL: '${{ secrets.SSD_UPLOAD_URL }}'
          };
          
          await createPRComment(github, context, secrets);

    # Show artifact information in workflow logs
    - name: Show Artifact Info
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const { showArtifactInfo } = require('./.github/scripts/pr-comment-script.js');
          
          const secrets = {
            GITHUB_SERVER_URL: '${{ github.server_url }}',
            GITHUB_RUN_ID: '${{ github.run_id }}',
            SSD_UPLOAD_URL: '${{ secrets.SSD_UPLOAD_URL }}'
          };
          
          showArtifactInfo(context, secrets);
